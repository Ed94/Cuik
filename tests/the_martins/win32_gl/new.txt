Microsoft (R) COFF/PE Dumper Version 14.29.30137.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file isolate.obj

File Type: COFF OBJECT

doodoo:
  0000000000000000: 55                 push        rbp
  0000000000000001: 48 89 E5           mov         rbp,rsp
  0000000000000004: 48 83 EC 20        sub         rsp,20h
  0000000000000008: 48 C7 45 F8 00 00  mov         qword ptr [rbp-8],0
                    00 00
  0000000000000010: 48 83 C4 20        add         rsp,20h
  0000000000000014: 5D                 pop         rbp
  0000000000000015: C3                 ret
StringsAreEqual:
  0000000000000016: 55                 push        rbp
  0000000000000017: 48 89 E5           mov         rbp,rsp
  000000000000001A: 53                 push        rbx
  000000000000001B: 56                 push        rsi
  000000000000001C: 57                 push        rdi
  000000000000001D: 41 54              push        r12
  000000000000001F: 41 55              push        r13
  0000000000000021: 48 83 EC 68        sub         rsp,68h
  0000000000000025: 48 89 4D 10        mov         qword ptr [rbp+10h],rcx
  0000000000000029: 48 89 55 18        mov         qword ptr [rbp+18h],rdx
  000000000000002D: 4C 89 45 20        mov         qword ptr [rbp+20h],r8
  0000000000000031: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  0000000000000035: 44 8A 08           mov         r9b,byte ptr [rax]
  0000000000000038: 45 31 D2           xor         r10d,r10d
  000000000000003B: 44 88 C8           mov         al,r9b
  000000000000003E: 80 F8 00           cmp         al,0
  0000000000000041: 41 0F 95 C2        setne       r10b
  0000000000000045: C6 45 D7 00        mov         byte ptr [rbp-29h],0
  0000000000000049: 45 84 D2           test        r10b,r10b
  000000000000004C: 0F 84 1F 00 00 00  je          0000000000000071
  0000000000000052: 48 8B 45 20        mov         rax,qword ptr [rbp+20h]
  0000000000000056: 49 89 C1           mov         r9,rax
  0000000000000059: 49 83 E9 01        sub         r9,1
  000000000000005D: 4C 89 4D 20        mov         qword ptr [rbp+20h],r9
  0000000000000061: 31 FF              xor         edi,edi
  0000000000000063: 49 89 C3           mov         r11,rax
  0000000000000066: 49 83 FB 00        cmp         r11,0
  000000000000006A: 40 0F 95 C7        setne       dil
  000000000000006E: 88 7D D7           mov         byte ptr [rbp-29h],bh
  0000000000000071: C6 45 D6 00        mov         byte ptr [rbp-2Ah],0
  0000000000000075: 80 7D D7 00        cmp         byte ptr [rbp-29h],0
  0000000000000079: 0F 84 16 00 00 00  je          0000000000000095
  000000000000007F: 48 8B 45 18        mov         rax,qword ptr [rbp+18h]
  0000000000000083: 44 8A 18           mov         r11b,byte ptr [rax]
  0000000000000086: 31 F6              xor         esi,esi
  0000000000000088: 44 88 D8           mov         al,r11b
  000000000000008B: 80 F8 00           cmp         al,0
  000000000000008E: 40 0F 95 C6        setne       sil
  0000000000000092: 88 75 D6           mov         byte ptr [rbp-2Ah],dh
  0000000000000095: 80 7D D6 00        cmp         byte ptr [rbp-2Ah],0
  0000000000000099: 0F 84 46 00 00 00  je          00000000000000E5
  000000000000009F: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  00000000000000A3: 49 89 C3           mov         r11,rax
  00000000000000A6: 49 83 C3 01        add         r11,1
  00000000000000AA: 4C 89 5D 10        mov         qword ptr [rbp+10h],r11
  00000000000000AE: 8A 18              mov         bl,byte ptr [rax]
  00000000000000B0: 0F BE C3           movsx       eax,bl
  00000000000000B3: 48 8B 5D 18        mov         rbx,qword ptr [rbp+18h]
  00000000000000B7: 49 89 DC           mov         r12,rbx
  00000000000000BA: 49 83 C4 01        add         r12,1
  00000000000000BE: 89 45 D0           mov         dword ptr [rbp-30h],eax
  00000000000000C1: 4C 89 65 18        mov         qword ptr [rbp+18h],r12
  00000000000000C5: 8A 03              mov         al,byte ptr [rbx]
  00000000000000C7: 0F BE D8           movsx       ebx,al
  00000000000000CA: 8B 45 D0           mov         eax,dword ptr [rbp-30h]
  00000000000000CD: 39 D8              cmp         eax,ebx
  00000000000000CF: 0F 84 0B 00 00 00  je          00000000000000E0
  00000000000000D5: C7 C0 00 00 00 00  mov         eax,0
  00000000000000DB: E9 9B 00 00 00     jmp         000000000000017B
  00000000000000E0: E9 4C FF FF FF     jmp         0000000000000031
  00000000000000E5: 48 8B 45 20        mov         rax,qword ptr [rbp+20h]
  00000000000000E9: 45 31 ED           xor         r13d,r13d
  00000000000000EC: 48 89 C3           mov         rbx,rax
  00000000000000EF: 48 83 FB 00        cmp         rbx,0
  00000000000000F3: 41 0F 95 C5        setne       r13b
  00000000000000F7: C6 45 CF 00        mov         byte ptr [rbp-31h],0
  00000000000000FB: 45 84 ED           test        r13b,r13b
  00000000000000FE: 0F 84 27 00 00 00  je          000000000000012B
  0000000000000104: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  0000000000000108: 48 89 4D C0        mov         qword ptr [rbp-40h],rcx
  000000000000010C: 8A 08              mov         cl,byte ptr [rax]
  000000000000010E: 0F BE C1           movsx       eax,cl
  0000000000000111: 48 8B 4D 18        mov         rcx,qword ptr [rbp+18h]
  0000000000000115: 89 45 BC           mov         dword ptr [rbp-44h],eax
  0000000000000118: 8A 01              mov         al,byte ptr [rcx]
  000000000000011A: 0F BE C8           movsx       ecx,al
  000000000000011D: 31 DB              xor         ebx,ebx
  000000000000011F: 8B 45 BC           mov         eax,dword ptr [rbp-44h]
  0000000000000122: 39 C8              cmp         eax,ecx
  0000000000000124: 40 0F 94 C3        sete        bl
  0000000000000128: 88 5D CF           mov         byte ptr [rbp-31h],bl
  000000000000012B: C6 45 BB 01        mov         byte ptr [rbp-45h],1
  000000000000012F: 80 7D CF 00        cmp         byte ptr [rbp-31h],0
  0000000000000133: 0F 85 3E 00 00 00  jne         0000000000000177
  0000000000000139: 48 8B 45 20        mov         rax,qword ptr [rbp+20h]
  000000000000013D: 48 89 55 B0        mov         qword ptr [rbp-50h],rdx
  0000000000000141: 31 D2              xor         edx,edx
  0000000000000143: 48 89 C1           mov         rcx,rax
  0000000000000146: 48 83 F9 00        cmp         rcx,0
  000000000000014A: 40 0F 94 C2        sete        dl
  000000000000014E: C6 45 AF 00        mov         byte ptr [rbp-51h],0
  0000000000000152: 84 D2              test        dl,dl
  0000000000000154: 0F 84 17 00 00 00  je          0000000000000171
  000000000000015A: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  000000000000015E: 8A 08              mov         cl,byte ptr [rax]
  0000000000000160: 0F BE C1           movsx       eax,cl
  0000000000000163: 31 D2              xor         edx,edx
  0000000000000165: 89 C1              mov         ecx,eax
  0000000000000167: 83 F9 00           cmp         ecx,0
  000000000000016A: 40 0F 94 C2        sete        dl
  000000000000016E: 88 55 AF           mov         byte ptr [rbp-51h],dl
  0000000000000171: 8A 45 AF           mov         al,byte ptr [rbp-51h]
  0000000000000174: 88 45 BB           mov         byte ptr [rbp-45h],al
  0000000000000177: 0F B6 45 BB        movzx       eax,byte ptr [rbp-45h]
  000000000000017B: 48 83 C4 68        add         rsp,68h
  000000000000017F: 41 5D              pop         r13
  0000000000000181: 41 5C              pop         r12
  0000000000000183: 5F                 pop         rdi
  0000000000000184: 5E                 pop         rsi
  0000000000000185: 5B                 pop         rbx
  0000000000000186: 5D                 pop         rbp
  0000000000000187: C3                 ret
test:
  0000000000000188: 55                 push        rbp
  0000000000000189: 48 89 E5           mov         rbp,rsp
  000000000000018C: 57                 push        rdi
  000000000000018D: 48 81 EC 98 00 00  sub         rsp,98h
                    00
  0000000000000194: 48 89 4D 10        mov         qword ptr [rbp+10h],rcx
  0000000000000198: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  000000000000019C: 48 89 45 E0        mov         qword ptr [rbp-20h],rax
  00000000000001A0: E9 00 00 00 00     jmp         00000000000001A5
  00000000000001A5: E9 00 00 00 00     jmp         00000000000001AA
  00000000000001AA: 48 8B 55 10        mov         rdx,qword ptr [rbp+10h]
  00000000000001AE: 44 8A 02           mov         r8b,byte ptr [rdx]
  00000000000001B1: 41 0F BE D0        movsx       edx,r8b
  00000000000001B5: 41 89 D0           mov         r8d,edx
  00000000000001B8: 41 83 F8 00        cmp         r8d,0
  00000000000001BC: 0F 85 05 00 00 00  jne         00000000000001C7
  00000000000001C2: E9 38 00 00 00     jmp         00000000000001FF
  00000000000001C7: 48 8B 55 10        mov         rdx,qword ptr [rbp+10h]
  00000000000001CB: 44 8A 02           mov         r8b,byte ptr [rdx]
  00000000000001CE: 41 0F BE D0        movsx       edx,r8b
  00000000000001D2: 41 C6 C1 20        mov         r9b,20h
  00000000000001D6: 45 0F BE C1        movsx       r8d,r9b
  00000000000001DA: 41 89 D1           mov         r9d,edx
  00000000000001DD: 45 39 C1           cmp         r9d,r8d
  00000000000001E0: 0F 85 05 00 00 00  jne         00000000000001EB
  00000000000001E6: E9 14 00 00 00     jmp         00000000000001FF
  00000000000001EB: 48 8B 55 10        mov         rdx,qword ptr [rbp+10h]
  00000000000001EF: 49 89 D0           mov         r8,rdx
  00000000000001F2: 49 83 C0 01        add         r8,1
  00000000000001F6: 4C 89 45 10        mov         qword ptr [rbp+10h],r8
  00000000000001FA: E9 A6 FF FF FF     jmp         00000000000001A5
  00000000000001FF: 48 8B 55 10        mov         rdx,qword ptr [rbp+10h]
  0000000000000203: 4C 8B 4D E0        mov         r9,qword ptr [rbp-20h]
  0000000000000207: 49 89 D2           mov         r10,rdx
  000000000000020A: 4C 89 CA           mov         rdx,r9
  000000000000020D: 4D 89 D1           mov         r9,r10
  0000000000000210: 49 29 D1           sub         r9,rdx
  0000000000000213: 4C 89 4D D8        mov         qword ptr [rbp-28h],r9
  0000000000000217: 48 8D 15 10 00 00  lea         rdx,[.rdata+10h]
                    00
  000000000000021E: 4C 8B 55 D8        mov         r10,qword ptr [rbp-28h]
  0000000000000222: 4C 8B 5D D8        mov         r11,qword ptr [rbp-28h]
  0000000000000226: 4C 89 DF           mov         rdi,r11
  0000000000000229: 4C 8B 5D E0        mov         r11,qword ptr [rbp-20h]
  000000000000022D: 48 89 4D D0        mov         qword ptr [rbp-30h],rcx
  0000000000000231: 48 89 D1           mov         rcx,rdx
  0000000000000234: 4C 89 D2           mov         rdx,r10
  0000000000000237: 41 89 F8           mov         r8d,edi
  000000000000023A: 4D 89 D9           mov         r9,r11
  000000000000023D: E8 00 00 00 00     call        printf
  0000000000000242: 48 8D 05 40 00 00  lea         rax,[.rdata+40h]
                    00
  0000000000000249: 48 8B 4D E0        mov         rcx,qword ptr [rbp-20h]
  000000000000024D: 48 8B 55 D8        mov         rdx,qword ptr [rbp-28h]
  0000000000000251: 48 89 4D C8        mov         qword ptr [rbp-38h],rcx
  0000000000000255: 48 89 C1           mov         rcx,rax
  0000000000000258: 48 89 55 C0        mov         qword ptr [rbp-40h],rdx
  000000000000025C: 48 8B 55 C8        mov         rdx,qword ptr [rbp-38h]
  0000000000000260: 4C 8B 45 C0        mov         r8,qword ptr [rbp-40h]
  0000000000000264: E8 AD FD FF FF     call        StringsAreEqual
  0000000000000269: 89 C1              mov         ecx,eax
  000000000000026B: 83 F9 00           cmp         ecx,0
  000000000000026E: 0F 84 14 00 00 00  je          0000000000000288
  0000000000000274: 48 8D 05 58 00 00  lea         rax,[.rdata+58h]
                    00
  000000000000027B: 48 89 C1           mov         rcx,rax
  000000000000027E: E8 00 00 00 00     call        printf
  0000000000000283: E9 87 00 00 00     jmp         000000000000030F
  0000000000000288: 48 8D 05 60 00 00  lea         rax,[.rdata+60h]
                    00
  000000000000028F: 48 8B 4D E0        mov         rcx,qword ptr [rbp-20h]
  0000000000000293: 48 8B 55 D8        mov         rdx,qword ptr [rbp-28h]
  0000000000000297: 48 89 4D B8        mov         qword ptr [rbp-48h],rcx
  000000000000029B: 48 89 C1           mov         rcx,rax
  000000000000029E: 48 89 55 B0        mov         qword ptr [rbp-50h],rdx
  00000000000002A2: 48 8B 55 B8        mov         rdx,qword ptr [rbp-48h]
  00000000000002A6: 4C 8B 45 B0        mov         r8,qword ptr [rbp-50h]
  00000000000002AA: E8 67 FD FF FF     call        StringsAreEqual
  00000000000002AF: 89 C1              mov         ecx,eax
  00000000000002B1: 83 F9 00           cmp         ecx,0
  00000000000002B4: 0F 84 14 00 00 00  je          00000000000002CE
  00000000000002BA: 48 8D 05 83 00 00  lea         rax,[.rdata+83h]
                    00
  00000000000002C1: 48 89 C1           mov         rcx,rax
  00000000000002C4: E8 00 00 00 00     call        printf
  00000000000002C9: E9 41 00 00 00     jmp         000000000000030F
  00000000000002CE: 48 8D 05 90 00 00  lea         rax,[.rdata+90h]
                    00
  00000000000002D5: 48 8B 4D E0        mov         rcx,qword ptr [rbp-20h]
  00000000000002D9: 48 8B 55 D8        mov         rdx,qword ptr [rbp-28h]
  00000000000002DD: 48 89 4D A8        mov         qword ptr [rbp-58h],rcx
  00000000000002E1: 48 89 C1           mov         rcx,rax
  00000000000002E4: 48 89 55 A0        mov         qword ptr [rbp-60h],rdx
  00000000000002E8: 48 8B 55 A8        mov         rdx,qword ptr [rbp-58h]
  00000000000002EC: 4C 8B 45 A0        mov         r8,qword ptr [rbp-60h]
  00000000000002F0: E8 21 FD FF FF     call        StringsAreEqual
  00000000000002F5: 89 C1              mov         ecx,eax
  00000000000002F7: 83 F9 00           cmp         ecx,0
  00000000000002FA: 0F 84 0F 00 00 00  je          000000000000030F
  0000000000000300: 48 8D 05 AC 00 00  lea         rax,[.rdata+0ACh]
                    00
  0000000000000307: 48 89 C1           mov         rcx,rax
  000000000000030A: E8 00 00 00 00     call        printf
  000000000000030F: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  0000000000000313: 8A 08              mov         cl,byte ptr [rax]
  0000000000000315: 0F BE C1           movsx       eax,cl
  0000000000000318: 89 C1              mov         ecx,eax
  000000000000031A: 83 F9 00           cmp         ecx,0
  000000000000031D: 0F 85 05 00 00 00  jne         0000000000000328
  0000000000000323: E9 1C 00 00 00     jmp         0000000000000344
  0000000000000328: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  000000000000032C: 48 89 C1           mov         rcx,rax
  000000000000032F: 48 83 C1 01        add         rcx,1
  0000000000000333: 48 89 4D 10        mov         qword ptr [rbp+10h],rcx
  0000000000000337: 48 8B 45 10        mov         rax,qword ptr [rbp+10h]
  000000000000033B: 48 89 45 E0        mov         qword ptr [rbp-20h],rax
  000000000000033F: E9 5C FE FF FF     jmp         00000000000001A0
  0000000000000344: 48 81 C4 98 00 00  add         rsp,98h
                    00
  000000000000034B: 5F                 pop         rdi
  000000000000034C: 5D                 pop         rbp
  000000000000034D: C3                 ret
main:
  000000000000034E: 55                 push        rbp
  000000000000034F: 48 89 E5           mov         rbp,rsp
  0000000000000352: 48 83 EC 40        sub         rsp,40h
  0000000000000356: 48 8D 05 B0 00 00  lea         rax,[.rdata+0B0h]
                    00
  000000000000035D: 48 89 C1           mov         rcx,rax
  0000000000000360: E8 23 FE FF FF     call        test
  0000000000000365: C7 C0 00 00 00 00  mov         eax,0
  000000000000036B: 48 83 C4 40        add         rsp,40h
  000000000000036F: 5D                 pop         rbp
  0000000000000370: C3                 ret

  Summary

           0 .data
         3E9 .rdata
         371 .text
