
#include <stdbool.h>
#include <stdint.h>
#include <windows.h>

// NOTE(NeGate): this is where the actual logic goes, the entry point thread is where
// the window is going to be handled so that resize and move don't stall things.
static DWORD main_thread(LPVOID param) {
	return 0;
}

int WinMain() {
	bool test_condition = true;

	char name[4];
	name[0] = 84;
	name[1] = 83;
	name[2] = 84;
	name[3] = 0;

	uintptr_t name_as_int = &name;

	WNDCLASSA wc;
	wc.hInstance = GetModuleHandleA(0);
	wc.lpfnWndProc = DefWindowProcA;
	wc.lpszClassName = &name;
	RegisterClassA(&wc);
	GetLastError();
	
	HWND window = CreateWindowExA(262144, &name,
									&name, 13565952,
									100, 100, 1600, 900,
								    0, 0, wc.hInstance, 0);

	
	DWORD main_thread_id;
	CreateThread(0, 0, main_thread, window, 0, &main_thread_id);

	// Display the window
	ShowWindow(window, SW_SHOWDEFAULT);
	SetFocus(window);
	
	while (1) {
		MSG msg;
		GetMessageA(&msg, 0, 0, 0);
		TranslateMessage(&msg);
	
		if (msg.message == WM_QUIT ||
			msg.message == WM_CLOSE||
			msg.message == WM_SIZE ||
			msg.message == WM_CHAR ||
			msg.message == WM_KEYDOWN) {
			// forward the relevant messages
			PostThreadMessageA(main_thread_id, msg.message, msg.wParam, msg.lParam);
		} else {
			DispatchMessageA(&msg);
		}
	}

	return 0;
}

