include_rules

CC=clang
OPT=n
USE_MIMALLOC=n
USE_ASAN=y
COMPILE_DRIVER=y

ifeq ($(CC),cl)
    error MSVC is not supported with Cuik's Tup builds
endif

!cc = |> $(CC) $(CFLAGS) %f -g -c -o %o |> bin/%B.o

ifeq ($(COMPILE_DRIVER),y)
    CFLAGS += -DCUIK_USE_TB
endif

CFLAGS += -I include -I lib -I deps -I tilde-backend/include
CFLAGS += -Wall -Werror -Wno-unused-function -Wno-unused-variable
CFLAGS += -DCUIK_USE_TB -DTB_COMPILE_TESTS

ifeq ($(OPT),y)
    CFLAGS += -O2 -DNDEBUG
endif

ifeq ($(USE_ASAN),y)
    CFLAGS += -fsanitize=address
endif

# configure architecture-specific targeting
ifeq (@(TUP_ARCH),x86_64)
    CFLAGS += -msse4.2 -maes
endif

ifeq (@(TUP_PLATFORM),win32)
    CFLAGS += -D_CRT_SECURE_NO_WARNINGS

    ifneq ($(USE_ASAN),y)
        CFLAGS += -D_DLL
    endif
endif

# library source
srcs = lib/*.c lib/preproc/*.c lib/front/*.c lib/targets/*.c lib/back/ir_gen.c lib/back/linker.c

ifeq (@(TUP_PLATFORM),win32)
    # lexer generator
    : |> $(CC) lexgen.c -o bin/a.exe && a %o |> lib/preproc/dfa.h | bin/a.exe

    # compile all the normal source files
    : foreach $(srcs) lib/back/microsoft_craziness.c deps/threads_msvc.c | lib/preproc/dfa.h |> !cc |> {objs}
    : {objs} |> lib /nologo /out:%o %f |> bin/libcuik.lib
else
    # lexer generator
    : |> $(CC) lexgen.c -o bin/a.out && bin/a.out %o |> lib/preproc/dfa.h | bin/a.out

    CFLAGS += -DMI_MALLOC_OVERRIDE -I mimalloc/include

    # compile all the normal source files
    : foreach $(srcs) deps/mimalloc/src/static.c | lib/preproc/dfa.h |> !cc |> {objs}
    : {objs} |> ar -rcs %o %f |> bin/libcuik.a
endif

# compile driver
ifeq ($(COMPILE_DRIVER),y)
    DRIVER_FILES = drivers/main_driver.c drivers/threadpool.c drivers/bindgen_c99.c drivers/bindgen_odin.c

    ifeq (@(TUP_PLATFORM),win32)
        ifeq ($(USE_MIMALLOC),y)
            CFLAGS += mimalloc/out/Release/mimalloc.lib -Xlinker /include:mi_version
            CFLAGS += -nodefaultlibs -lmsvcrt -lvcruntime -lucrt
        endif

        CFLAGS += -Xlinker /incremental:no -lDbgHelp
        : $(DRIVER_FILES) bin/libcuik.lib tilde-backend/tildebackend.lib |> $(CC) $(CFLAGS) %f -g -o %o |> bin/cuik.exe | bin/cuik.lib bin/cuik.exp bin/cuik.pdb
    else
        : $(DRIVER_FILES) bin/libcuik.a tilde-backend/tildebackend.a |> $(CC) $(CFLAGS) %f -lm -ldl -lpthread -g -o %o |> bin/cuik
    endif
endif
