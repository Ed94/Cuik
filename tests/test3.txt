
typedef int BOOL;
typedef long LONG;
typedef unsigned int UINT;
typedef unsigned int DWORD;

typedef short ATOM;

typedef void* HWND;
typedef void* HICON;
typedef void* HMENU;
typedef void* HBRUSH;
typedef void* HCURSOR;
typedef void* HMODULE;
typedef void* LPVOID;
typedef void* LRESULT;
typedef const char* LPCSTR;

typedef int INT_PTR, *PINT_PTR;
typedef unsigned int UINT_PTR, *PUINT_PTR;

typedef long LONG_PTR, *PLONG_PTR;
typedef unsigned long ULONG_PTR, *PULONG_PTR;

typedef UINT_PTR            WPARAM;
typedef LONG_PTR            LPARAM;
typedef LONG_PTR            LRESULT;

typedef void* HINSTANCE;
typedef void(*WNDPROC)(HWND, UINT, WPARAM, LPARAM);

typedef struct tagPOINT {
  LONG x;
  LONG y;
} POINT, *PPOINT;

typedef struct tagWNDCLASSA {
  UINT      style;
  WNDPROC   lpfnWndProc;
  int       cbClsExtra;
  int       cbWndExtra;
  HINSTANCE hInstance;
  HICON     hIcon;
  HCURSOR   hCursor;
  HBRUSH    hbrBackground;
  LPCSTR    lpszMenuName;
  LPCSTR    lpszClassName;
} WNDCLASSA, *PWNDCLASSA, *NPWNDCLASSA, *LPWNDCLASSA;

typedef struct tagMSG {
  HWND   hwnd;
  UINT   message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD  time;
  POINT  pt;
  DWORD  lPrivate;
} MSG, *PMSG, *NPMSG, *LPMSG;

HMODULE GetModuleHandleA(LPCSTR lpModuleName);
LRESULT DefWindowProcA(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam);
BOOL GetMessageA(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax);
BOOL TranslateMessage(const MSG *lpMsg);
LRESULT DispatchMessageA(const MSG *lpMsg);
BOOL ShowWindow(HWND hWnd, int nCmdShow);
ATOM RegisterClassA(const WNDCLASSA* wc);
BOOL SetFocus(HWND hWnd);
DWORD GetLastError();

HWND CreateWindowExA(DWORD dwExStyle, LPCSTR lpClassName, 
	LPCSTR lpWindowName, DWORD dwStyle,
	int X, int Y, int nWidth, int nHeight,
	HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam);

int entry() {
	char name[4];
	name[0] = 84;
	name[1] = 83;
	name[2] = 84;
	name[3] = 0;

	WNDCLASSA wc;
	wc.hInstance = GetModuleHandleA(0);
	wc.lpfnWndProc = DefWindowProcA;
	wc.lpszClassName = &name;
	RegisterClassA(&wc);
	GetLastError();
	
	HWND window = CreateWindowExA(262144, &name,
									&name, 768,
									400, 400, 1600, 900,
								    0, 0, wc.hInstance, 0);

	ShowWindow(window, 10);
	SetFocus(window);
	
	while (1) {
		MSG msg;
		GetMessageA(&msg, 0, 0, 0);
		TranslateMessage(&msg);
		DispatchMessageA(&msg);
	}

	return 0;
}
