g():
L0: # r1 terminates at r10
  r2	=	[i32 x   1]	  PARAM 0
  r3	=	[i32 x   1]	  PARAM 1
  r4	=	&PARAM 0
  r5	=	&PARAM 1
  r6	=	 &i
  r7	=	 &s
  r8	=	[i32 x   1]	 *r7 (4 align)
 *r6 	=	[i32 x   1]	 r8 (4 align)

L1: # r10 terminates at r17
  r11	=	 &i
  r12	=	[i32 x   1]	 *r11 (4 align)
  r13	=	[i32 x   1]	 1
  r14	=	[i32 x   1]	 25
  r15	=	[i32 x   1]	 r13 << r14
  r16	=	[bool]     	 r12 < r15 # signed
  if (r16)	L2 else L3

L2: # r18 terminates at r36
  r19	=	[i32 x   1]	 *r4 (4 align)
  r20	=	[i64 x   1]	 SXT r19
  r21	=	[i64 x   1]	 1
  r22	=	[i64 x   1]	 r20 * r21
  r23	=	[i32 x   1]	 *r4 (4 align)
  r24	=	[i64 x   1]	 SXT r23
  r25	=	[i64 x   1]	 r22 * r24
  r26	=	 &m
  r27	=	[i32 x   1]	 *r26 (4 align)
  r28	=	[i64 x   1]	 SXT r27
  r29	=	[i64 x   1]	 r25 %s r28
 *r4 	=	[i64 x   1]	 r29 (8 align)
  r31	=	 &i
  r32	=	[i32 x   1]	 *r31 (4 align)
  r33	=	[i32 x   1]	 2
  r34	=	[i32 x   1]	 r32 * r33
 *r31 	=	[i32 x   1]	 r34 (4 align)
  goto L1

L3: # r37 terminates at r41
  r38	=	 &p
  r39	=	 &t
 *r38 	=	[ptr]      	 r39 (4 align)

L4: # r41 terminates at r50
  r42	=	 &p
  r43	=	[ptr]      	 *r42 (8 align)
  r44	=	 &t
  r45	=	 &N
  r46	=	[i32 x   1]	 *r45 (4 align)
  r47	=	[i64 x   1]	 ZXT r46
  r48	=	[ptr]      	 &r44[r47 * 4]
  r49	=	[bool]     	 r43 < r48
  if (r49)	L5 else L6

L5: # r51 terminates at r59
  r52	=	 &i
  r53	=	 &s
  r54	=	[i32 x   1]	 *r53 (4 align)
 *r52 	=	[i32 x   1]	 r54 (4 align)
  r56	=	 &c
  r57	=	[i32 x   1]	 1
 *r56 	=	[i32 x   1]	 r57 (4 align)

L7: # r59 terminates at r62
  r60	=	 &i
  r61	=	[i32 x   1]	 *r60 (4 align)
  if (r61)	L8 else L9

L8: # r63 terminates at r74
  r64	=	 &a
  r65	=	 &p
  r66	=	[ptr]      	 *r65 (8 align)
  r67	=	 &s
  r68	=	[i32 x   1]	 *r67 (4 align)
  r69	=	[ptr]      	 &r66[r68 * 4]
  r70	=	[i32 x   1]	 *r69 (4 align)
  r71	=	[i64 x   1]	 SXT r70
  r72	=	[i32 x   1]	 *r5 (4 align)
  r73	=	[bool]     	 TRUNC r72
  if (r73)	L11 else L12

L11: # r75 terminates at r79
  r76	=	 &c
  r77	=	[i32 x   1]	 *r76 (4 align)
  r78	=	[i64 x   1]	 SXT r77
  goto L10

L12: # r80 terminates at r82
  r81	=	[i64 x   1]	 1

L10: # r82 terminates at r109
  r83	=	[i64 x   1]	 PHI L11:r78, L12:r81
  r84	=	[i64 x   1]	 r71 * r83
  r85	=	 &m
  r86	=	[i32 x   1]	 *r85 (4 align)
  r87	=	[i64 x   1]	 SXT r86
  r88	=	[i64 x   1]	 r84 %s r87
 *r64 	=	[i64 x   1]	 r88 (8 align)
  r90	=	 &p
  r91	=	[ptr]      	 *r90 (8 align)
  r92	=	 &s
  r93	=	[i32 x   1]	 *r92 (4 align)
  r94	=	[ptr]      	 &r91[r93 * 4]
  r95	=	 &m
  r96	=	[i32 x   1]	 *r95 (4 align)
  r97	=	[i32 x   1]	 1
  r98	=	[i32 x   1]	 r96 * r97
  r99	=	 &p
  r100	=	[ptr]      	 *r99 (8 align)
  r101	=	[i32 x   1]	 *r100 (4 align)
  r102	=	[i32 x   1]	 r98 + r101
  r103	=	 &a
  r104	=	[i32 x   1]	 *r103 (4 align)
  r105	=	[i32 x   1]	 r102 - r104
  r106	=	[i64 x   1]	 SXT r105
  r107	=	[i32 x   1]	 *r5 (4 align)
  r108	=	[bool]     	 TRUNC r107
  if (r108)	L14 else L15

L14: # r110 terminates at r112
  r111	=	[i64 x   1]	 1
  goto L13

L15: # r113 terminates at r117
  r114	=	 &c
  r115	=	[i32 x   1]	 *r114 (4 align)
  r116	=	[i64 x   1]	 SXT r115

L13: # r117 terminates at r163
  r118	=	[i64 x   1]	 PHI L14:r111, L15:r116
  r119	=	[i64 x   1]	 r106 * r118
  r120	=	 &m
  r121	=	[i32 x   1]	 *r120 (4 align)
  r122	=	[i64 x   1]	 SXT r121
  r123	=	[i64 x   1]	 r119 %s r122
 *r94 	=	[i64 x   1]	 r123 (8 align)
  r125	=	 &p
  r126	=	[ptr]      	 *r125 (8 align)
  r127	=	 &a
  r128	=	[i32 x   1]	 *r127 (4 align)
  r129	=	[i32 x   1]	 1
  r130	=	[i32 x   1]	 r128 * r129
  r131	=	 &p
  r132	=	[ptr]      	 *r131 (8 align)
  r133	=	[i32 x   1]	 *r132 (4 align)
  r134	=	[i32 x   1]	 r130 + r133
  r135	=	 &m
  r136	=	[i32 x   1]	 *r135 (4 align)
  r137	=	[i32 x   1]	 r134 %u r136
 *r126 	=	[i32 x   1]	 r137 (4 align)
  r139	=	 &p
  r140	=	[ptr]      	 *r139 (8 align)
  r141	=	[ptr]      	 4
  r142	=	[ptr]      	 r140 + r141
 *r139 	=	[ptr]      	 r142 (8 align)
  r144	=	 &c
  r145	=	 &c
  r146	=	[i32 x   1]	 *r145 (4 align)
  r147	=	[i64 x   1]	 SXT r146
  r148	=	[i64 x   1]	 1
  r149	=	[i64 x   1]	 r147 * r148
  r150	=	[i32 x   1]	 *r4 (4 align)
  r151	=	[i64 x   1]	 SXT r150
  r152	=	[i64 x   1]	 r149 * r151
  r153	=	 &m
  r154	=	[i32 x   1]	 *r153 (4 align)
  r155	=	[i64 x   1]	 SXT r154
  r156	=	[i64 x   1]	 r152 %s r155
 *r144 	=	[i64 x   1]	 r156 (8 align)
  r158	=	 &i
  r159	=	[i32 x   1]	 *r158 (4 align)
  r160	=	[i32 x   1]	 1
  r161	=	[i32 x   1]	 r159 - r160
 *r158 	=	[i32 x   1]	 r161 (4 align)
  goto L7

L9: # r164 terminates at r172
  r165	=	 &p
  r166	=	[ptr]      	 *r165 (8 align)
  r167	=	 &s
  r168	=	[i32 x   1]	 *r167 (4 align)
  r169	=	[ptr]      	 INT2PTR r168
  r170	=	[ptr]      	 &r166[r169 * 4]
 *r165 	=	[ptr]      	 r170 (8 align)
  goto L4

L6: # r173 terminates at r174
  ret		[void]     	 r0

main():
L0: # r1 terminates at r4
  r2	=	[i8  x   1]	 65
  r3	=	[i32 x   1]	ECALL putchar(r2)

L1: # r4 terminates at r11
  r5	=	 &e
  r6	=	[i32 x   1]	 *r5 (4 align)
  r7	=	[i32 x   1]	 2
  r8	=	[i32 x   1]	 r6 /s r7
 *r5 	=	[i32 x   1]	 r8 (4 align)
  r10	=	[i32 x   1]	 *r5 (4 align)
  if (r10)	L2 else L3

L2: # r12 terminates at r42
  r13	=	 &N
  r14	=	[i32 x   1]	 *r13 (4 align)
  r15	=	[i32 x   1]	 2
  r16	=	[i32 x   1]	 r14 * r15
 *r13 	=	[i32 x   1]	 r16 (4 align)
  r18	=	 &U
  r19	=	 &U
  r20	=	[i32 x   1]	 *r19 (4 align)
  r21	=	[i64 x   1]	 SXT r20
  r22	=	[i64 x   1]	 1
  r23	=	[i64 x   1]	 r21 * r22
  r24	=	 &m
  r25	=	[i32 x   1]	 *r24 (4 align)
  r26	=	[i32 x   1]	 1
  r27	=	[i32 x   1]	 r25 + r26
  r28	=	[i64 x   1]	 SXT r27
  r29	=	[i64 x   1]	 r23 * r28
  r30	=	[i32 x   1]	 2
  r31	=	[i64 x   1]	 SXT r30
  r32	=	[i64 x   1]	 r29 /s r31
  r33	=	 &m
  r34	=	[i32 x   1]	 *r33 (4 align)
  r35	=	[i64 x   1]	 SXT r34
  r36	=	[i64 x   1]	 r32 %s r35
 *r18 	=	[i64 x   1]	 r36 (8 align)
  r38	=	 &s
  r39	=	 &N
  r40	=	[i32 x   1]	 *r39 (4 align)
 *r38 	=	[i32 x   1]	 r40 (4 align)

L4: # r42 terminates at r49
  r43	=	 &s
  r44	=	[i32 x   1]	 *r43 (4 align)
  r45	=	[i32 x   1]	 2
  r46	=	[i32 x   1]	 r44 /s r45
 *r43 	=	[i32 x   1]	 r46 (4 align)
  r48	=	[i32 x   1]	 *r43 (4 align)
  if (r48)	L5 else L6

L5: # r50 terminates at r54
  r51	=	[i32 x   1]	 136
  r52	=	[i32 x   1]	 0
  r53	=	[void]     	CALL g(r51, r52)
  goto L4

L6: # r55 terminates at r59
  r56	=	 &p
  r57	=	 &t
 *r56 	=	[ptr]      	 r57 (4 align)

L7: # r59 terminates at r68
  r60	=	 &p
  r61	=	[ptr]      	 *r60 (8 align)
  r62	=	 &t
  r63	=	 &N
  r64	=	[i32 x   1]	 *r63 (4 align)
  r65	=	[i64 x   1]	 ZXT r64
  r66	=	[ptr]      	 &r62[r65 * 4]
  r67	=	[bool]     	 r61 < r66
  if (r67)	L8 else L9

L8: # r69 terminates at r101
  r70	=	 &p
  r71	=	[ptr]      	 *r70 (8 align)
  r72	=	 &p
  r73	=	[ptr]      	 *r72 (8 align)
  r74	=	[i32 x   1]	 *r73 (4 align)
  r75	=	[i64 x   1]	 SXT r74
  r76	=	[i64 x   1]	 1
  r77	=	[i64 x   1]	 r75 * r76
  r78	=	 &p
  r79	=	[ptr]      	 *r78 (8 align)
  r80	=	[i32 x   1]	 *r79 (4 align)
  r81	=	[i64 x   1]	 SXT r80
  r82	=	[i64 x   1]	 r77 * r81
  r83	=	 &m
  r84	=	[i32 x   1]	 *r83 (4 align)
  r85	=	[i64 x   1]	 SXT r84
  r86	=	[i64 x   1]	 r82 %s r85
  r87	=	 &U
  r88	=	[i32 x   1]	 *r87 (4 align)
  r89	=	[i64 x   1]	 SXT r88
  r90	=	[i64 x   1]	 r86 * r89
  r91	=	 &m
  r92	=	[i32 x   1]	 *r91 (4 align)
  r93	=	[i64 x   1]	 SXT r92
  r94	=	[i64 x   1]	 r90 %s r93
 *r71 	=	[i64 x   1]	 r94 (8 align)
  r96	=	 &p
  r97	=	[ptr]      	 *r96 (8 align)
  r98	=	[ptr]      	 4
  r99	=	[ptr]      	 r97 + r98
 *r96 	=	[ptr]      	 r99 (8 align)
  goto L7

L9: # r102 terminates at r106
  r103	=	 &s
  r104	=	[i32 x   1]	 1
 *r103 	=	[i32 x   1]	 r104 (4 align)

L10: # r106 terminates at r112
  r107	=	 &s
  r108	=	[i32 x   1]	 *r107 (4 align)
  r109	=	 &N
  r110	=	[i32 x   1]	 *r109 (4 align)
  r111	=	[bool]     	 r108 < r110 # signed
  if (r111)	L11 else L12

L11: # r113 terminates at r122
  r114	=	[i32 x   1]	 839354248
  r115	=	[i32 x   1]	 1
  r116	=	[void]     	CALL g(r114, r115)
  r117	=	 &s
  r118	=	[i32 x   1]	 *r117 (4 align)
  r119	=	[i32 x   1]	 2
  r120	=	[i32 x   1]	 r118 * r119
 *r117 	=	[i32 x   1]	 r120 (4 align)
  goto L10

L12: # r123 terminates at r130
  r124	=	 &a
  r125	=	[i32 x   1]	 0
 *r124 	=	[i32 x   1]	 r125 (4 align)
  r127	=	 &p
  r128	=	 &t
 *r127 	=	[ptr]      	 r128 (4 align)

L13: # r130 terminates at r139
  r131	=	 &p
  r132	=	[ptr]      	 *r131 (8 align)
  r133	=	 &t
  r134	=	 &N
  r135	=	[i32 x   1]	 *r134 (4 align)
  r136	=	[i64 x   1]	 ZXT r135
  r137	=	[ptr]      	 &r133[r136 * 4]
  r138	=	[bool]     	 r132 < r137
  if (r138)	L14 else L15

L14: # r140 terminates at r168
  r141	=	 &a
  r142	=	[i32 x   1]	 *r141 (4 align)
  r143	=	 &p
  r144	=	[ptr]      	 *r143 (8 align)
  r145	=	[i32 x   1]	 *r144 (4 align)
  r146	=	 &e
  r147	=	[i32 x   1]	 *r146 (4 align)
  r148	=	[i32 x   1]	 1
  r149	=	[i32 x   1]	 r147 & r148
  r150	=	[i32 x   1]	 r145 << r149
  r151	=	[i32 x   1]	 r142 + r150
 *r141 	=	[i32 x   1]	 r151 (4 align)
  r153	=	 &p
  r154	=	[ptr]      	 *r153 (8 align)
  r155	=	[ptr]      	 4
  r156	=	[ptr]      	 r154 + r155
 *r153 	=	[ptr]      	 r156 (8 align)
  r158	=	 &a
  r159	=	[i32 x   1]	 *r158 (4 align)
  r160	=	[i32 x   1]	 10
  r161	=	[i32 x   1]	 r159 %s r160
 *r154 	=	[i32 x   1]	 r161 (4 align)
  r163	=	 &a
  r164	=	[i32 x   1]	 *r163 (4 align)
  r165	=	[i32 x   1]	 10
  r166	=	[i32 x   1]	 r164 /s r165
 *r163 	=	[i32 x   1]	 r166 (4 align)
  goto L13

L15: # r169 terminates at r170
  goto L1

L3: # r171 terminates at r172

L16: # r172 terminates at r181
  r173	=	 &p
  r174	=	[ptr]      	 *r173 (8 align)
  r175	=	[ptr]      	 4
  r176	=	[ptr]      	 r174 - r175
 *r173 	=	[ptr]      	 r176 (8 align)
  r178	=	[i32 x   1]	 *r176 (4 align)
  r179	=	[i32 x   1]	 0
  r180	=	[bool]     	 r178 == r179
  if (r180)	L17 else L18

L17: # r182 terminates at r183
  goto L16

L18: # r184 terminates at r192
  r185	=	 &t
  r186	=	[i32 x   1]	 0
  r187	=	[ptr]      	 &r185[r186 * 4]
  r188	=	[i32 x   1]	 *r187 (4 align)
  r189	=	[i32 x   1]	 1
  r190	=	[i32 x   1]	 r188 - r189
 *r187 	=	[i32 x   1]	 r190 (4 align)

L19: # r192 terminates at r197
  r193	=	 &p
  r194	=	[ptr]      	 *r193 (8 align)
  r195	=	 &t
  r196	=	[bool]     	 r195 <= r194
  if (r196)	L20 else L21

L20: # r198 terminates at r208
  r199	=	[i32 x   1]	 48
  r200	=	 &p
  r201	=	[ptr]      	 *r200 (8 align)
  r202	=	[ptr]      	 4
  r203	=	[ptr]      	 r201 - r202
 *r200 	=	[ptr]      	 r203 (8 align)
  r205	=	[i32 x   1]	 *r201 (4 align)
  r206	=	[i32 x   1]	 r199 + r205
  r207	=	[i32 x   1]	ECALL putchar(r206)
  goto L19

L21: # r209 terminates at r210
  ret		[i32 x   1]	 r0

